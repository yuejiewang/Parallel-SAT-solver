/*************************************************************************
	> File Name: pseudo-code.cpp
	> Author: yuejie
	> Mail: kathywangyuejie@gmail.com
	> Created Time: Thu Apr  8 07:19:31 2021
 ************************************************************************/

// This is some pseudo code for parallel DPLL

// data structure for nodes
struct decision_level {
//	int split_variable  // optional
	bitmap decided  // if the variable is assigned with a value
	bitmap values  // the assigned values
	cnf_type cnf  // this part will probably cost a lot of memory, nlogn
};

// run in parallel
for each thread:
	calculate_root();
	while (root != NULL):
		//
		push_back(root)
		while (queue not empty):
			current_node = pop_back()
			compute(current_node)  // bcp, decide the next variable and others
			if (all variables decided):
				if (SAT): return
			else:
				push_back(left_child)
				push_back(right_child)
		//
		
		// another version for the while loop, the two should be equivalent
		current_node = root
		while (current_node != NULL) :
			compute(current_node)
			if (all variables decided) :
				if (SAT) : return
				else : current_node = (queue is empty) ? NULL : pop_back()
			else :
				current_node = left_child
				push_back(right_child)
		//
		
		// current tree traversal finished; steal some work from another thread
		// haven't figured out the choosing strategy yet
		// might need MPI and do some optimizations here
		t = choose_thread()
		root = t.front()
		t.pop_front()

/* compute(node)
 * input: DL(struct decision_level pointer), left_DL(pointer), right_DL(pointer)
 * output: split_variable
 * left_DL/right_DL(pointer): the decision level of left/right child
 * function: compute and assign the value of left_DL and right_DL relatively
 * do Propagation() on the current node based on the decided variables, update bitmap (decided
 * and values) and the clause during the while loop, don't need to resolve conflict
 * choose a split_variable, assign it with 0/1, update only this variable in the bitmap (decided
 * and values) and give the updated bitmaps and local clause to left/right child pointer
 * for the local clause, just remove all the variables assigned with a value to simplify the
 * computation for subtrees
 */
